#!/bin/sh

# ########################################################################
# This program is part of mozsql
# License: GPL License (see COPYING) & Mozilla Public License
# Authors:
#  Brandon Johnson
# ########################################################################

# ########################################################################
# Redirect STDERR to STDOUT; Nagios doesn't handle STDERR.
# ########################################################################
exec 2>&1

# ########################################################################
# Run the program.
# ########################################################################
main() {
   # Get options
   for o; do
      case "${o}" in
         -c)              shift; OPT_CRIT="${1}"; shift; ;;
         --defaults-file) shift; OPT_DEFT="${1}"; shift; ;;
         -f)              shift; OPT_FRAG="${1}"; shift; ;;
         -H)              shift; OPT_HOST="${1}"; shift; ;;
         -u)              shift; OPT_USER="${1}"; shift; ;;
         -p)              shift; OPT_PASS="${1}"; shift; ;;
         -P)              shift; OPT_PORT="${1}"; shift; ;;
         -S)              shift; OPT_SOCK="${1}"; shift; ;;
         -w)              shift; OPT_WARN="${1}"; shift; ;;
         -n)              shift; OPT_NAGIOS="y"; ;;
         --version)       grep -A2 '^=head1 VERSION' "$0" | tail -n1; exit 0 ;;
         --help)          perl -00 -ne 'm/^  Usage:/ && print' "$0"; exit 0 ;;
         -*)              echo "Unknown option ${o}.  Try --help."; exit 1; ;;
      esac
   done

   OPT_NAGIOS=${OPT_NAGIOS:="n"}

   if [[ ${OPT_NAGIOS} = "y" ]]; then
          OPT_CRIT=${OPT_CRIT:-90}
          OPT_WARN=${OPT_WARN:-80}
          OPT_FRAG=${OPT_FRAG:-50}
   fi

   if is_not_sourced && [[ ${OPT_NAGIOS} = "y" ]]; then
      if [ -n "$1" ]; then
         echo "WARN spurious command-line options: $@"
         exit 1
      fi
   fi

   # Get data paths into a temp file.
   local TEMP=$(mktemp -t "${0##*/}.XXXXXX") || exit $?
   trap "rm -f '${TEMP}' >/dev/null 2>&1" EXIT

   mysql_exec 'SELECT @@datadir, @@innodb_data_home_dir\G' > "${TEMP}"

   if [ $? = 0 ]; then
       DATA_DIR=$(awk '/datadir:/{print $2}' "${TEMP}")
       IBD_DIR=$(awk '/innodb_data_home_dir:/{print $2}' "${TEMP}")

       # Get sizes of these directories on disk/free space.
       DD_DRIVE=`df ${DATA_DIR} | awk '/\//{print $1}'`
       DD_USE=`df ${DATA_DIR} | awk '/\//{print $3}'`
       DD_TOTAL=`df ${DATA_DIR} | awk '/\//{print $4}'`
       DD_USE_PCT=`df ${DATA_DIR} | awk '/\//{print $5}' | sed s/%//`
       DISK_NOTE="Datadir Disk % Used: ${DD_USE_PCT} \n"

       if [ "${IBD_DIR}" != "NULL" ]; then
         IBD_DRIVE=`df ${IBD_DIR} | | awk '/\//{print $1}'`

         if [ "${IBD_DRIVE}" != "${DD_DRIVE}" ]; then 
             IBD_USE=`df ${IBD_DIR} | awk '/\//{print $3}'`
             IBD_TOTAL=`df ${IBD_DIR} | awk '/\//{print $4}'`
             IBD_USE_PCT=`df ${IBD_DIR} | awk '/\//{print $5}' | sed s/%//`
             DISK_NOTE="InnoDB Homedir Disk % Used: ${IBD_USE_PCT} \n"
         fi
       else 
           IBD_USE=0
           IBD_TOTAL=0
           IBD_USE_PCT=0
       fi

       MAX=`echo $((${DD_USE_PCT}>${IBD_USE_PCT}?${DD_USE_PCT}:${IBD_USE_PCT}))`

   else
      NOTE="UNK could not retrieve MySQL Data locations."
   fi
   
   # Set our post value equal to everything we've learned so far.
   NOTE=${NOTE:=${DISK_NOTE}}

   # Remove line breaks for Nagios.
   if [[ ${OPT_NAGIOS} = "y" ]]; then
      NOTE=`echo -e ${NOTE} | tr -d '\n'`
      if [ "${MAX:-0}" -ge "${OPT_CRIT}" ]; then
         NOTE="CRIT $NOTE"
      elif [ "${FRAG_PCT:-0}" -ge "${OPT_FRAG}" ] || [ "${MAX:-0}" -ge "${OPT_WARN}" ]; then
         NOTE="WARN $NOTE"
      else
         NOTE="OK $NOTE"
      fi
   fi
   echo -e $NOTE
}


# ########################################################################
# Execute a MySQL command.
# This block of code was taken from the Percona Monitoring Plugins
# copyright 2012 Baron Schwartz, 2012 Percona Inc.
# ########################################################################
mysql_exec() {
   mysql ${OPT_DEFT:+--defaults-file="${OPT_DEFT}"} ${OPT_HOST:+-h"${OPT_HOST}"} ${OPT_USER:+-u"${OPT_USER}"} \
      ${OPT_PASS:+-p"${OPT_PASS}"} ${OPT_SOCK:+-S"${OPT_SOCK}"} ${OPT_PORT:+-P"${OPT_PORT}"} \
      -ss -e "$1"
}

# ########################################################################
# Determine whether this program is being executed directly, or sourced/included
# from another file.
# This block of code was taken from the Percona Monitoring Plugins
# copyright 2012 Baron Schwartz, 2012 Percona Inc.
# ########################################################################
is_not_sourced() {
   [ "${0##*/}" = "disk_usage" ] || [ "${0##*/}" = "bash" -a "$_" = "$0" ]
}

# ########################################################################
# Execute the program if it was not included from another file.
# This makes it possible to include without executing, and thus test.
# This block of code was taken from the Percona Monitoring Plugins
# copyright 2012 Baron Schwartz, 2012 Percona Inc.
# ########################################################################
if is_not_sourced; then
   OUTPUT=$(main "$@")
   EXITSTATUS=$STATE_UNKNOWN
   case "${OUTPUT}" in
      UNK*)  EXITSTATUS=$STATE_UNKNOWN;  ;;
      OK*)   EXITSTATUS=$STATE_OK;       ;;
      WARN*) EXITSTATUS=$STATE_WARNING;  ;;
      CRIT*) EXITSTATUS=$STATE_CRITICAL; ;;
   esac
   echo "${OUTPUT}"
   exit $EXITSTATUS
fi

# ############################################################################
# Documentation
# ############################################################################
: <<'DOCUMENTATION'
=pod

=head1 NAME

disk_usage - MySQL Database Disk Usage

=head1 SYNOPSIS

  Usage: disk_usage [OPTIONS]
  Options:
    -n NAGIOS       Indiciates if nagios alert or not; This option allows the use of -c and -w.
    -c CRIT         Critical threshold; --Default 1000
    --defaults-file FILE Only read mysql options from the given file.
    -f FRAG %       Fragmentation % threshold.
    -H HOST         MySQL hostname.
    -u USER         MySQL username.
    -p PASS         MySQL password.
    -P PORT         MySQL port.
    -S SOCKET       MySQL socket file.
    -w WARN         Warning threshold; --Default 1000
    --help          Print help and exit.
    --version       Print version and exit.
  Options must be given as --option value, not --option=value or -Ovalue.
  Use perldoc to read embedded documentation with more details.

=head1 DESCRIPTION

This script/nagios plugin checks MySQL Disk usage for all databases and let's you know the percent free.
The nagios check alerts if data disk usage is greater than the threshold.
The human readable version shows information per database.

If called without the -n option, this script will automatically assume it is being run for the human readable format.
The -n option should always be used when running this script for the purpose of a nagios alert.
The -n option also allows the use of the -w and -c options to override the default warn/crit
value of 80 percent utilized and 90 percent utilized.
Setting the -w and -c flags will only have an affect when the nagios option is used.

This plugin assumes mysql can be run directly as "mysql" or user credentials are provided to it
using the -u, -p, -P, and -H options.

=head1 PRIVILEGES

This plugin executes the following commands against MySQL:

=over

=item *

SELECT @@datadir, @@innodb_data_home_dir\G

=back

This plugin executes the following UNIX commands that may need special privileges:

=over

=item *

mysql

=item *

grep

= item *

awk

= item * 

echo

= item *

df 

= item *

sed

=back

=head1 COPYRIGHT, LICENSE, AND WARRANTY

The contents of this file are subject to the Mozilla Public License
Version 2.0 (the "License"); you may not use this file except in
compliance with the License. You may obtain a copy of the License at
http://www.mozilla.org/MPL/

Covered Software is provided under this License on an “as is”
basis, without warranty of any kind, either expressed, implied,
or statutory, including, without limitation, warranties that the
Covered Software is free of defects, merchantable, fit for a
particular purpose or non-infringing. The entire risk as to the
quality and performance of the Covered Software is with You.
Should any Covered Software prove defective in any respect,
You (not any Contributor) assume the cost of any necessary servicing,
repair, or correction. This disclaimer of warranty constitutes an
essential part of this License. No use of any Covered Software is
authorized under this License except under this disclaimer.

The Original Code is mozsql

The Initial Developer of the Original Code is Brandon Johnson. Portions created
by Brandon Johnson are Copyright (C) Mozilla, Inc. All Rights Reserved.

Alternatively, the contents of this file may be used under the terms of the
GNU Public License, Version 2 (the "GPLv2 License"), in which case the
provisions of GPLv2 License are applicable instead of those above. If you
wish to allow use of your version of this file only under the terms of the
GPLv2 License and not to allow others to use your version of this file under
the MPL, indicate your decision by deleting the provisions above and replace
them with the notice and other provisions required by the GPLv2 License. If
you do not delete the provisions above, a recipient may use your version of
this file under either the MPL or the GPLv2 License.

=head1 VERSION

mozsql disk_usage - Disk Usage Check 1.0

=cut

DOCUMENTATION

